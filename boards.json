{"boards": [{
  "heading": "In Ember, what is the difference between this and this.controller?",
  "author": "szaske",
  "content": "I'm attempting to build a simple Ember application that collects information from a form. I'm using this tutorial as a guide. In the tutorial it has the following code to grab information from a form... In my solution I could not get this to work. this.get('whatever') always showed up as 'undefined' in my code. After a bit of debugging I was able to find a solution, but it meant changing my code from this.get('city') to this.controller.get('city'). Can someone explain what I'm doing wrong or why?",
  "tag": "#ember#js#this.controller",
  "date": "Aug 11 '17 at 19:01'",
  "image": "https://www.gravatar.com/avatar/6610f5be8df44a7c4c7324c436ef5242?s=32&d=identicon&r=PG"
}, {
  "heading": "Javascript promise chaining issues (Ember)",
  "author": "Cameron",
  "content": "I'm trying to upload a file to a remote server, get the path for that file on that server, and then save it in a record to my own API. Over half the time, the code crashes because returnedNewFile is undefined (though I've checked console.log(newFile) in the previous .then() function and it's always a promise object. What could be causing this behavior? What could be causing returnedNewFile to sometimes be null/undefined? I'm using Django REST + django-rest-json-api + ember.js 2.6, and this code is in a component's javascript file. Thank you in advance!",
  "tag": "#ember#js#js#promise",
  "date": "Jul 19 '16 at 20:13",
  "image": "https://www.gravatar.com/avatar/8371065173a6c6bc169a4694c4fa2b50?s=32&d=identicon&r=PG"
  }],
  "answers": [{
    "author": "kumkanillam",
    "image": "https://i.stack.imgur.com/A9aUF.jpg?s=32&g=1",
    "text": "Template context will be the controller. Route model hook return data will be set in controller model property through setupController by default. You can access the controller in route thorugh this.controller. If you are using this inside the component it will refer to component instance, in your case, if you got the city property in component, then you can access it using this.get('city') in component."
  }, {
    "author": "Katana314",
    "text": "Promises will resolve other Promise when calling .then(). So while you could return a string from promise 1's function, and you would get that same string in its .then() call, the same is not true if you returned another Promise inside its function. It will instead resolve that second promise to a concrete value before giving a .then result. So if you called newFile.then(function(newFileResult) { ... then newFileResult would be the same as what you're now getting in the above code as the returnedNewFile argument. Why this library's promises sometimes come back with an undefined value is beyond me",
    "image": "https://www.gravatar.com/avatar/8371065173a6c6bc169a4694c4fa2b50?s=32&d=identicon&r=PG"
  }]
}
